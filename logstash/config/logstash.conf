input {
    stdin {
        codec => json
        type => webhooks
    }

    http {
        port => 8021
        type => webhooks
    }
    beats {
        port => 5044
    }
}

filter {

    mutate {
        add_field => {
            "custom_index" => "-default"
        }
    }

    if [type] == "nginx-logs" {
        grok {
            match => { "message" => "%{NGINXACCESS}" }
        }
        geoip {
            source => "clientip"
        }
    }  

    if [type] == "webhooks" {

        mutate {
            replace => {
                "custom_index" => "%{headers[request_path]}"
            }        
            gsub => [
                'custom_index', '/','-'
            ]
        }    

        if [headers][http_buildid] {
            mutate {
                add_field => { 
                  "build_number" => "%{headers[http_buildid]}"
                }
            }
            mutate {
                convert => { 
                  "build_number" => float
                }
            }
        }

        if [headers][request_path] == "/github/tangentmicroservices" {
            if [ref] {
                mutate {
                    add_field => {
                        "branch" => "%{ref}"                        
                    }                    
                }
                mutate {
                    gsub => [
                        'branch', 'refs/heads/',''
                    ]
                }                
                mutate {
                    add_field => {
                        "command" => "python /code/ansibles/builder.py --branch=%{branch} /code/ansibles/ %{repository[name]}"
                    }
                }
            }
        }

        # {"headers": {"request_path": {"/builds/asdasdas/coverage.json"}}, "coverage": { "lines-valid": "123", "lines-covered": "0.34" } }
        if ([headers][request_path] =~ /\/builds\/(.+)\/coverage.json/) {
            mutate {
                convert => { 
                  "coverage[lines-valid]" => "float"
                  "coverage[lines-covered]" => "float"
                  "coverage[line-rate]" => "float"
                  "coverage[branches-valid]" => "float"
                  "coverage[branches-covered]" => "float" 
                  "coverage[branch-rate]" => "float"
                  "coverage[complexity]"=> "float"
                }
            }
            mutate {
                remove_field => [ "coverage[packages]"]
            }
        }
    } 
}

output {
    
    if [type] == "webhooks" {
        if [headers][request_path] == "/github/tangentmicroservices" {
            # hipchat

            if [headers][http_x_github_event] in ['push', 'create', 'release']{
              # exec deploy

              if [ref] {
                http {
                    url => "http://10.2.0.9:8080/job/Build%20Service/buildWithParameters"
                    http_method => post
                    format => form
                    mapping => [
                        'git_branch', '%{branch}',  
                        'git_organization', 'TangentMicroServices', 
                        'git_repo', '%{repository[name]}'
                    ]
                  }
                }
            }

            if [headers][http_x_github_event] in ['delete']{
              # exec cleanup
            }

        }
    }
#    elasticsearch {
#        hosts => "elasticsearch:9200"
#        index => "logstash-%{type}%{custom_index}-%{+YYYY.MM.dd}"
#    }

    stdout { codec => rubydebug }
}